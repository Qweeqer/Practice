// Регулярні вирази - це маски, що використовуються для пошуку, заміни або перевірки на відповідність текстових рядків. Вони дозволяють швидко та ефективно виконувати складні операції з текстом, такі як вилучення даних, перевірка на валідність, пошук та інше.

// Основні поняття, що використовуються в регулярних виразах:

// Метасимволи: символи, які вказують на певні класи символів, які можуть входити у текст. Наприклад, метасимвол \d позначає будь-яку цифру.
// Квантифікатори: символи, які вказують на кількість входжень попереднього символу. Наприклад, квантифікатор + позначає одне або більше входження попереднього символу.
// Групи: підрядки, які можуть бути використані для згрупування символів та застосування до них квантифікаторів.
// Альтернативи: символи, які вказують на можливі варіанти символів у певному місці. Наприклад, альтернатива | позначає або один символ, або інший.
// Ось декілька прикладів регулярних виразів:

// Пошук всіх цифр в рядку:
// \d
// Пошук всіх слов з трьома буквами в рядку:
// \b\w{3}\b
// Пошук всіх рядків, що починаються з "The":
// ^The.*
// Пошук всіх рядків, що містять слово "fox" і закінчуються на "dog":
// .*fox.*dog$
// Пошук всіх електронних адрес у рядку:
// \w+@\w+\.\w{2,3}

// Методи регулярних виразів в JavaScript - це функції, які дозволяють здійснювати операції з регулярними виразами. Ось декілька методів регулярних виразів в JavaScript та їх приклади:

// 1)search(pattern) - цей метод шукає перше входження регулярного виразу pattern в рядок, на якому він викликається. Приклад:
// const string = 'The quick brown fox jumps over the lazy dog.';
// const pattern = /brown/;

// const match = string.search(pattern);

// if (match !== -1) {
//   console.log('Знайдено входження у рядку!');
// } else {
//   console.log('Входження не знайдено.');
// }

// 2)match(pattern) - цей метод знаходить всі входження регулярного виразу pattern в рядок, на якому він викликається, і повертає їх у вигляді масиву. Приклад:
// const string = 'The quick brown fox jumps over the lazy dog.';
// const pattern = /\w+/g;

// const matches = string.match(pattern);

// console.log(matches);

// 3) replace(pattern, replacement) - цей метод замінює всі входження регулярного виразу pattern у рядку, на якому він викликається, на рядок replacement. Приклад:
// const string = 'The quick brown fox jumps over the lazy dog.';
// const pattern = /\s+/g;
// const replacement = '_';

// const newString = string.replace(pattern, replacement);

// console.log(newString);

// 4) split(pattern) - цей метод розбиває рядок, на якому він викликається, на масив рядків за допомогою регулярного виразу pattern. Приклад:
// const string = 'The quick brown fox jumps over the lazy dog.';
// const pattern = /\s+/;

// const words = string.split(pattern);

// console.log(words);
