// "1) https://codepen.io/misha_klymenko/pen/abzLvqo
// - перебрати кожен елемент, і вибрати його data-anim значення
// - вибране значення додати як клас за допомогою classList до цього елемента.
// - перевірити чи застосувались анімації"
// - вибрати всі теги із класом cirkle
// -------------------------------------------------------------------------------------
//1 - вибрати всі теги із класом cirkle
const circles = document.querySelectorAll('.cirkle');

circles.forEach(circle => {
  //2 - перебрати кожен елемент, і вибрати його data-anim значення
    // const animationClass = circle.getAttribute('data-anim');
    // або
    const animationClass = circle.dataset.anim;
  //3 - вибране значення додати як клас за допомогою classList до цього елемента.
  circle.classList.add(animationClass);
  //4 - Перевірка, чи застосувались анімації
  console.log(circle.classList.contains(animationClass));
});
// або
//4 - Перевірка, чи застосувались анімації
// circles.forEach(circle => {
//   console.log(circle.classList.contains(circle.getAttribute('data-anim')));
// });

// Идеї проектів з використанням DOM дерева
// To-Do List
// Створіть програму для створення списку завдань. Завдання можна додавати, редагувати та видаляти. Кожне завдання має включати назву та опис. Ви можете використовувати локальне сховище браузера для зберігання даних.

// Калькулятор
// Створіть простий калькулятор, який може виконувати основні математичні операції. Він має мати кнопки для додавання, віднімання, множення та ділення. Калькулятор можна розширити, додавши функції, такі як додавання пам'яті, ділення на дроби та інше.

// Форма зворотнього зв'язку
// Створіть форму зворотнього зв'язку, де користувачі можуть залишати своє ім'я, електронну пошту та повідомлення. Після того, як користувач заповнить форму, повідомлення може бути відправлено на сервер за допомогою AJAX-запиту, або може бути збережено в локальному сховищі браузера.

// Галерея зображень
// Створіть галерею зображень, де користувачі можуть переглядати зображення та змінювати їх розмір. Ви можете використовувати стандартні функції браузера, такі як drag-and-drop, для перетягування зображень та зміни їх розміру.

// Гра "Memory"
// Створіть гру "Memory", де користувачі повинні знаходити пари картинок. Користувач повинен мати можливість перевернути карти для пошуку пар. Ви можете використовувати різні ефекти анімації для зроблення гри більш привабливою.

// Чат-бот
// Створіть простого чат-бота, який може відповідати на запитання користувача. Ви можете використовувати JavaScript для обробки запитань та відповідей.
// Веб-карта
// Створіть веб-карту, яка дозволяє користувачам переглядати різні місця на карті. Користувачі можуть змінювати масштаб карти, додавати маркери та відзначати місця на карті.

// Калькулятор валют
// Створіть калькулятор валют, який дозволяє користувачам конвертувати гроші з однієї валюти в іншу. Ви можете використовувати API для отримання актуальних курсів валют.

// Слайдер
// Створіть слайдер, який дозволяє користувачам переглядати різні зображення та відео. Ви можете використовувати JavaScript та CSS для створення ефектів анімації для переходу між зображеннями та відео.

// Калькулятор калорій
// Створіть калькулятор калорій, який дозволяє користувачам відстежувати свій раціон харчування та визначати кількість калорій в їжі. Ви можете використовувати базу даних з харчовими продуктами та їх калорійність для розрахунку
// кількості калорій.

// /HTML
//   < ol >
//   <li>0</li>
//   <li>1</li>
//   <li>1</li>
// </ol>/


// let temp = ol.innerHTML;
// ol.innerHTML = 'prepend' + temp;
// ol.innerHTML += 'append';
// ------------------------------------------------------
{/* <input type="text" id="input1" value="Value 1">
<input type="text" id="input2" value="Value 2">
<button id="swapBtn">Swap values</button> */}
// const input1 = document.getElementById("input1");
// const input2 = document.getElementById("input2");
// const swapBtn = document.getElementById("swapBtn");

// swapBtn.addEventListener("click", () => {
//   const temp = input1.value;
//   input1.value = input2.value;
//   input2.value = temp;
// });
// У цьому прикладі, на кнопку з ідентифікатором "swapBtn" прикріплюється подія "click",
//   яка виконує функцію обміну значень двох інпутів місцями.Спочатку зберігається 
//   значення першого інпуту в змінну temp.Потім значення першого інпуту замінюється на значення другого інпуту,
//   а значення другого інпуту - на значення temp.Таким чином, значення двох інпутів міняються місцями. 
